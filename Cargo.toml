[package]
name = "mzdata"
version = "0.29.0"
edition = "2018"
keywords = ['mass-spectrometry', 'mzml', 'mgf']

categories = ["science", "parser-implementations", "data-structures"]

description = "A library to read mass spectrometry data formats"
license = "Apache-2.0"
repository = "https://github.com/mobiusklein/mzdata"
documentation = "https://docs.rs/mzdata"

exclude = ["tmp/*", "test/data/*"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[[bin]]
name = "mzdata"
# src = "src/main.rs"

[[example]]
name = "async_mzcat"
required-features = ["async"]

[[example]]
name = "mzcat"
required-features = ["parallelism"]

[[example]]
name = "averaging_writer"
required-features = ["parallelism", "mzsignal", "nalgebra"]

[[example]]
name = "random_access_iter"
required-features = ["nalgebra"]

[lib]
name = "mzdata"
# src = "src/lib.rs"

[profile.release]
lto = true
debug = true

[features]
# default = ["nalgebra", "parallelism", "mzsignal", "zlib-ng-compat"]
default = ["zlib-ng-compat"]

openblas = ["mzsignal", "mzsignal/openblas"]
netlib = ["mzsignal", "mzsignal/netlib"]
intel-mkl = ["mzsignal", "mzsignal/intel-mkl"]
nalgebra = ["mzsignal", "mzsignal/nalgebra"]
parallelism = ["rayon", "mzsignal/parallelism"]

# The zlib feature makes the code faster unoptimized, but with LTO the default
# algorithm is faster on tests. Odds are on real data, this will vary with the
# size of the data being shuttled back and forth, and on the quality of the data
# (de)compression.
zlib = ["flate2/zlib"]
zlib-ng-compat = ["flate2/zlib-ng-compat"]
zlib-ng = ["flate2/zlib-ng"]
miniz_oxide = ["flate2/rust_backend"]

# Enables reading mzMLb
mzmlb = ["hdf5", "ndarray", "hdf5-sys"]

# Enable compiling and statically linking HDF5, which requires building
# libz-sys in static mode, which conflicts with flate2/zlib-ng-compat
# but not flate2/zlib
hdf5_static = ["mzmlb", "hdf5-sys/static", "hdf5-sys/zlib", "libz-sys"]

thermo = [
    "thermorawfilereader",
    "thermorawfilereader/net8_0",
    "thermorawfilereader/nethost-download",
]

doc-only = ["thermorawfilereader/doc-only"]

async = ["tokio", "quick-xml/async-tokio"]

[dependencies]
regex = "1"
lazy_static = "1.4.0"
serde = { version = "1.0.204", features = ["derive"] }
serde_json = "1.0.120"
quick-xml = { version = "0.30", features = ["serialize"] }
flate2 = { version = "1.0.20" }
num-traits = "0.2"
indexmap = { version = "2.0.0", features = ["serde"] }
log = "0.4.20"
mzpeaks = { version = ">=0.20.0,<1.0.0" }
rayon = { version = ">=1.8.0,<2.0", optional = true }
mzsignal = { version = ">=0.22.0,<1.0.0", default-features = false, optional = true}
md5 = "0.7.0"
tokio = { version = "1.32.0", optional = true, features = [
    "macros",
    "rt",
    "fs",
    "rt-multi-thread",
] }

hdf5 = { version = "0.8.1", optional = true, features = ["blosc", "lzf"] }
hdf5-sys = { version = "0.8.1", optional = true }
libz-sys = { version = "1.1", default-features = false, features = [
    "static",
], optional = true }
ndarray = { version = "0.15.6", optional = true }
filename = { version = "0.1.1", optional = true }

numpress = { version = "1.1.0", optional = true }
bytemuck = { version = "1.15.0", features = ["extern_crate_alloc"] }
base64-simd = "0.8.0"
thiserror = "1.0.50"

thermorawfilereader = { version = "0.2.7", default-features = false, optional = true }
sha1 = "0.10.6"
base16ct = { version = "0.2.0", features = ["alloc"] }
chrono = "0.4.37"
bitflags = "2.5.0"

[dev-dependencies]
criterion = { version = "0.5.1", features = ["html_reports"] }
test-log = "0.2.12 "
env_logger = "0.10.0"
tempfile = "3.10"
clap = { version = "4.4.11", features = ["derive"] }

[[bench]]
name = "mzml"
harness = false


[package.metadata.docs.rs]
features = [
    "parallelism",
    "mzsignal",
    "nalgebra",
    "mzmlb",
    "async",
    "thermorawfilereader",
    "doc-only",
]
no-default-features = true
